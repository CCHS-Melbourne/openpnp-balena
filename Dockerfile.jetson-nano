FROM alwaysai/edgeiq:nano-latest

ENV DEBIAN_FRONTEND noninteractive

# Install desktop environment...
RUN apt-get update
RUN apt-get install -qq -y wget curl git \
					 xserver-xorg-core xserver-xorg-input-all xinit xauth dbus-x11 usbutils \
					 xfce4 xfce4-terminal

# ...and required openpnp deps
RUN apt-get install -qq -y maven ant \
                     libjna-jni libtiff5 libpng16-16 libpng-sixlegs-java libatlas3-base \
                     libgstreamer1.0-0 libgstreamer-plugins-base1.0-dev libgstreamer-gl1.0-0 \
                     libgstreamer-plugins-bad1.0-0 \
                     libv4l-0 libxvidcore4

# disable lxpolkit popup warning
#RUN mv /usr/bin/lxpolkit /usr/bin/lxpolkit.bak

RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Setting working directory
WORKDIR /usr/src/app

# Install Corretto, since OpenJDK seems to be only available as JRE in Debian bullseye for ARM64
RUN wget https://corretto.aws/downloads/latest/amazon-corretto-11-aarch64-linux-jdk.deb \
	&& dpkg -i *.deb && rm *.deb
ENV JAVA_HOME /usr/lib/jvm/java-11-amazon-corretto

# Install OpenPnP
WORKDIR /usr/src/app
RUN git clone --depth 1 https://github.com/CCHS-Melbourne/openpnp.git
RUN cd openpnp && mvn -DskipTests install

# Copy relevant files and apply hacks
COPY objs/libopencv_java342.so /usr/src/app
COPY objs/libopenpnp-capture.so /usr/src/app
RUN rm openpnp/target/lib/openpnp-capture-java-0.0.17.jar
COPY objs/openpnp-capture-java-0.0.17.jar openpnp/target/lib
COPY objs/libjnidispatch.so /usr/lib/aarch64-linux-gnu/jni/libjnidispatch.so
#RUN ln -sf /usr/lib/aarch64-linux-gnu/jni/libjnidispatch.system.so /usr/lib/aarch64-linux-gnu/jni/libjnidispatch.so
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/src/app:/usr/lib/aarch64-linux-gnu/jni
ENV CLASSPATH $CLASSPATH:/usr/src/app

# Provision OpenPNP configuration, to be refined with more accessible remote provisioning
RUN mkdir -p /root/.openpnp2 /root/.config
COPY config/machine.xml /root/.openpnp2/machine.xml
## Those cannot be empty, otherwise OpenPnP crashes
#COPY config/parts.xml /root/.openpnp2/parts.xml
#COPY config/packages.xml /root/.openpnp2/packages.xml
COPY config/xfce-autostart.cfg /root/.config/autostart/openpnp.desktop

# Prepare to start the kiosk
COPY start.sh start.sh
RUN chmod -x start.sh

# Mouse/keyboard support
ENV UDEV=1

CMD ["bash", "start.sh"]
